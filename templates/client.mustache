<!DOCTYPE html>
<html>
	<head>
		<!-- Meta -->
		<meta name="viewport" content="width=device-width, initial-scale=1.0">
		<meta http-equiv="Content-Type" content="text/html;charset=utf-8">
		<title>WebMarble Client</title>
		<link href="favicon.ico?" rel="shortcut icon" type="image/x-icon">
		
		<!-- Stylesheets -->
		<link href="fontello/css/fontello.css" rel="stylesheet">
		<link href="client.css" rel="stylesheet" type="text/css">
		
		<!-- Scripts -->
		<script src="socket.io.js"></script>
		<script src="client.js"></script>
	</head>
	<body>
		<script src="https://cdnjs.cloudflare.com/ajax/libs/three.js/r83/three.min.js"></script>
		<script src="threejs/OrbitControls.js"></script>
		<script>
			var scene = new THREE.Scene();
			var camera = new THREE.PerspectiveCamera( 75, window.innerWidth / window.innerHeight, 0.1, 1000 );

			var renderer = new THREE.WebGLRenderer();
			renderer.setSize( window.innerWidth, window.innerHeight );
			document.body.appendChild( renderer.domElement );
			
			var controls = new THREE.OrbitControls( camera, renderer.domElement );
			controls.enableDamping = true;
			controls.dampingFactor = 0.25;
			controls.enableZoom = true;
			
			var ambientLight = new THREE.AmbientLight( 0x404040 ); // soft white light
			scene.add( ambientLight );
			
			var pointLight = new THREE.PointLight();
			scene.add( pointLight );
			pointLight.position.x = 5;
			pointLight.position.y = 5;
			pointLight.position.z = 5;

			camera.position.x = 5;
			camera.position.y = 10;
			camera.position.z = 5;
            
			camera.rotation.x = -.6;
			camera.rotation.y = .3;
			camera.rotation.z = 0;
			controls.update();
			
			var marbles = [];
			
			function animate() {
				requestAnimationFrame( animate );
				for (i = 0; i < marbles.length; i++){
					marbles[i].position.x = positions[i*3];
					marbles[i].position.y = positions[i*3+2];
					marbles[i].position.z = positions[i*3+1];
				}
				
				if (marbles.length*3 < positions.length){
					var spehereGeometry = new THREE.SphereGeometry( .3 );
					var green = new THREE.MeshStandardMaterial( { color: 0x00ff00 } );
					for (i = 0; i < (positions.length/3 - marbles.length); i++){
						marbles.push( new THREE.Mesh( spehereGeometry, green ) );
						scene.add( marbles[marbles.length-1] );
					}
				}
				
				renderer.render( scene, camera );
			}
			
			setTimeout(function(){
				var spehereGeometry = new THREE.SphereGeometry( .3 );
				var green = new THREE.MeshStandardMaterial( { color: 0x00ff00 } );
				for (i = 0; i < positions.length/3; i++){
					marbles.push( new THREE.Mesh( spehereGeometry, green ) );
					scene.add( marbles[marbles.length-1] );
				}
				
				var cubeGeometry = new THREE.BoxGeometry( 3,3,3 );
				var red = new THREE.MeshStandardMaterial( { color: 0xff0000 } );
				cube = new THREE.Mesh( cubeGeometry, red );	
				scene.add( cube );
				
				// var controls = new THREE.OrbitControls(camera, renderer.domElement);
				
				animate();
			},1000);
		</script>
		<div id="overlayControls">
			<button id="marble">!marble</button>
		</div>
	</body>
</html>